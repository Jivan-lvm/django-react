networks:
  internal:
    driver: bridge

services:
  db:
    image: postgres:latest
    container_name: postgres
    env_file: .env
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - internal
  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - internal
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    restart: always
    networks:
      - internal
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    env_file: .env
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - db
      - redis
      - frontend
    volumes:
      - ./logs:/app/logs
    networks:
      - internal
    environment:
      - GUNICORN_WORKERS=2
      - GUNICORN_TIMEOUT=360
  celery-worker:
    build:
      context: ./backend
    container_name: celery-worker
    restart: always
    env_file: .env
    command: celery -A backend worker --loglevel=info
    volumes:
      - ./logs:/app/logs
    depends_on:
      - redis
    networks:
      - internal
  celery-beat:
    build:
      context: ./backend
    container_name: celery-beat
    restart: always
    env_file: .env
    command: celery -A backend beat --loglevel=info
    volumes:
      - ./logs:/app/logs
    depends_on:
      - redis
      - celery-worker
    networks:
      - internal
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: always
    depends_on:
      - backend
      - frontend
    ports:
      - "8000:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/build:/usr/share/nginx/html
    networks:
      - internal

volumes:
  postgres_data:
